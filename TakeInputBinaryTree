#include<iostream>
using namespace std;
class binary_node {
public:
	int data;
	binary_node* left_child;
	binary_node* right_child;
	binary_node(int data)
	{
		this->data = data;
		left_child = nullptr;
		right_child = nullptr;
	}
};
void print(binary_node* root)
{
	if (root == nullptr)
		return;

	cout << root->data << ":";

	if(root->left_child!=nullptr)
		cout <<"L"<< root->left_child->data;
	
	if (root->left_child != nullptr)
		cout << "R" << root->right_child->data;
	cout << endl;
	print(root->left_child);
	print(root->right_child);
}
binary_node* take_input()
{
	int data;
	cout << "enter data" << endl;
	cin >> data;
	if (data == -1)
		return nullptr;
	binary_node* root = new binary_node(data);
	binary_node* left_child = take_input();
	binary_node* right_child = take_input();
	root->left_child = left_child;
	root->right_child = right_child;
	return root;
}
int main()
{
	/*binary_node* root = new binary_node(1);
	binary_node* left_child = new binary_node(2);
	binary_node* right_child = new binary_node(3);
	root->left_child = left_child;
	root->right_child = right_child;*/
	binary_node* root=take_input();
	print(root);
	return 0;
}
