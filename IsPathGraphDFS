#include<iostream>
#include<queue>
using namespace std;
bool isPath(int** edges,int n, int sv, int ev,bool* visited)
{
	if (sv == ev)
		return true;
	for (int i = 0; i < n; i++)
	{
		if (edges[sv][i] == 1 && !visited[i])
		{
			if (i == sv)
				continue;
			visited[i] = true;
			isPath(edges, n, sv, ev,visited);
		}
	}
	
}
void printDFS(int** edge, int n, int sv,bool* visited)
{
	cout << sv;
	visited[sv] = true;
	for (int i = 0; i < n; i++)
	{
		if (i == sv)
			continue;
		if (edge[sv][i] == 1 && !visited[i])
		{
			printDFS(edge, n, sv, visited);
		}
	}
}
int main()
{
	int n;
	cout << "enter the number of vertivces" << endl;
	cin >> n;
	int e;
	cout << "ennter the number of edges" << endl;
	cin >> e;
	int** edges = new int* [n];
	for (int i = 0; i < n; i++)
	{
		edges[i] = new int[n];
		for (int j = 0; j < n; j++)
		{
			edges[i][j] = 0;
		}
	}
	for (int i = 0; i < e; i++)
	{
		int f, s;
		cin >> f >> s;
		edges[f][s] = 1;
		edges[s][f] = 1;
	}
	bool* visited = new bool[n];
	for (int i = 0; i < n; i++)
	{
		visited[i] = false;
	}
	if (isPath(edges, n, 0, 3, visited))
		cout << "YES" << endl;
	else
		cout << "NO" << endl;
	return 0;
}
