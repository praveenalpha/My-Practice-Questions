void BFS(t src)
	{
		map<t, int > dist;
		map<t, t> parent;
		for (auto i : adjList)
			dist[i.first] = INT_MAX;
		
		dist[src] = 0;
		queue<t> q;
		q.push(src);
		parent[src] = src;
		
		while (!q.empty())
		{
			t node = q.front();
			cout << node << ", ";
			q.pop();

			for (int neighbour : adjList[node])
			{
				if (dist[neighbour] == INT_MAX)
				{
					q.push(neighbour);
					dist[neighbour] = dist[node] + 1;
					parent[neighbour] = node;
				}
			}
		}
			for (auto i : adjList)
			{
				t node = i.first;
				cout << "DISTANCE OF " << node << "FROM " << src << "IS " << dist[node] << '\n';
			}
		
	}
